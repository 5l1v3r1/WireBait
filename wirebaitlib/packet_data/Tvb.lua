---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by markus.
--- DateTime: 2/15/19 11:30 PM
---

function Tvb.new(byte_array, offset)
    assert(type(byte_array) == 'ByteArray', "Tvb constructor needs a ByteArray!")

    local tvb = {
        _struct_type = "Tvb",
        m_data = byte_array,
        m_offset = offset or 0;
    }

    local escape_replacements = {["\0"]="\\0", ["\t"]="\\t", ["\n"]="\\n", ["\r"]="\\r", }

    function tvb:reported_len()
        assert(false, "tvb:reported_len() is not available yet");
    end

    function tvb:len()
        return m_data:len();
    end

    function tvb:reported_length_remaining()
        --TODO: work on this!    
        --TODO: work on this!
        --TODO: work on this!
        --TODO: work on this!
        --TODO: work on this!

        io.write("[WARNING] tvb:reported_length_remaining() is not supported yet and returns len()!");
        return tvb:len();
    end

    function tvb:bytes()
        return self.m_data;
    end

    function tvb:offset()
        return self.m_offset;
    end

    function tvb:range(start, length)
        assert(start and start >= 0, "Start position should be positive positive!");
        length = length or self:len() - start; --add unit test for the case where no length was provided
        assert(length >= 0, "Length should be positive!");
        assert(start + length <= self:len(), "Index get out of bounds!")
        return Tvb.new(self.m_data:subset(start, length), offset)
    end

    --equivalent to tvb:range() but allows tvb to be called as a function
    function tvb:__call(start, length)
        return self:range(start, length);
    end

    function tvb:__tostring()
        if self:len() > 24 then --[[ellipsis after 24 bytes c.f. [tvbrange:__tostring()](https://wiki.wireshark.org/LuaAPI/Tvb#tvbrange:__tostring.28.29) ]]
            return string.format("%48s", tostring(self.m_data) .. "...");
        end
        return  string.lower(tostring(self.m_data));
    end

    setmetatable(tvb, tvb)

    return tvb;
end